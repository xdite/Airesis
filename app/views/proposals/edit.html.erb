<% content_for :head do %>
    <script type="text/javascript"
            src="https://maps.googleapis.com/maps/api/js?key=<%= Setting.maps_api_key %>&sensor=false&libraries=drawing">
    </script>
<% end %>


<% @page_title = t('pages.proposals.edit.title', title: @proposal.title) %>
<h1><%= @page_title %></h1>

<%= form_for (@group && !in_subdomain?) ? [@group, @proposal] : @proposal, :validate => true, :remote => @remote do |f| %>
    <% if can? :destroy, @proposal %>
        <div style="background: #FFE3A0; padding: 3px; border-radius: 2px;" class="shadow-box">
          <p>
            <% last = (10.minutes - (Time.now - @proposal.created_at)) / 60 %>

            <% if last < 2 %>
                <%= t('pages.proposals.edit.hurry_up') %>
            <% end %>
            <% if last > 0 %>
                <%= t('pages.proposals.edit.last_minutes', minutes: last.round(0)) %>
            <% else %>
                <%= t('pages.proposals.edit.no_participants') %>
            <% end %>
          </p>

          <p>
            <%= f.label :title %>
            <%= f.text_field :title %>
          </p>

          <p>
            <%= f.label :interest_borders_tkn %>
            <%= f.text_field 'interest_borders_tkn', "data-pre" => @proposal.interest_borders.to_json %>
          </p>

          <% if ::Configuration::folksonomy %>
              <p>
                <%= f.label :tags_list %>
                <%= f.text_field :tags_list %>
              </p>
          <% end %>

          <p>
            <% if @change_advanced_options %>
                <%= f.check_box :anonima %>
                <%= f.label :anonima %><br/>
                <%= f.check_box :visible_outside %>
                <%= f.label :visible_outside %><br/>
                <%= f.check_box :secret_vote %>
                <%= f.label :secret_vote %><br/>
            <% end %>
          </p>

        </div>
    <% end %>

    <p>
    <div style="float:left">
      <%= f.label :proposal_category_id %>
      <br/>
      <%= f.select :proposal_category_id, options_for_select(ProposalCategory.all.collect { |p| [p.description, p.id, {'data-imagesrc' => image_path("proposal_categories/#{p.id}_s.png")}] }, @proposal.proposal_category_id), {}, {style: 'width:300px'} %>
    </div>
    <div style="float:left;margin-left: 60px;margin-top: 10px;">
      <%#= link_to image_tag('maps.png', class: 'geocode_proposal'), @group ? geocode_group_proposal_url(@group, @proposal) : geocode_proposal_url(@proposal), remote: true %>
    </div>
    <div class="clearboth"></div>
    </p>


    <div class="sections_column">
      <% @proposal.sections.includes(:paragraphs).each_with_index do |section, i| %>
          <%= f.fields_for :sections, section do |s| %>
              <%= s.hidden_field :seq %>
              <%= s.check_box '_destroy', style: 'display:none' %>
              <%= s.fields_for :paragraphs, section.paragraphs.first do |p| %>
                  <div class="section_container" data-section_id="<%= i %>">
                    <span class="move_button">
                      <%= image_tag 'move.png' %>
                    </span>
                     <span class="remove_button">
                      <a href="#" onclick="removeSection(this,<%=i%>,true);return false;"><%= t('pages.proposals.edit.remove_section') %></a>
                    </span>

                    <div class="clearboth"></div>
                    <%= s.text_field :title, class: "edit_label" %>

                    <%= p.cktext_area :content_dirty, :rows => 5, :style => "width:98%;height:280px;", ckeditor: {toolbar: 'proposal', language: I18n.locale, customConfig: 'config_lite.js'} %>
                    <%= p.hidden_field :content %>
                    <%= p.hidden_field :seq %>
                  </div>
              <% end %>
          <% end %>
      <% end %>
    </div>

    <div class="new_section">
      <a href="#" onclick="addSection(this);return false;"><%= t('pages.proposals.edit.add_paragraph') %></a>
    </div>

    <hr/>
    <h4><%= t('pages.proposals.edit.edit_proposal') %></h4>

    <% @proposal.solutions.includes({:sections => :paragraphs}).order('sections.seq').each_with_index do |solution, i| %>
        <%= f.fields_for :solutions, solution do |sol| %>
            <div class="solution_main" data-solution_id="<%= i %>">
              <h3>
                <div class="tit1 sol">
                  <div class="tit2">
                    <span class="title_placeholder"><%=raw t("pages.proposals.edit.new_solution_title.#{@proposal.proposal_type.name.downcase}",num: i+1)%></span> <%= sol.text_field :title, placeholder: t("pages.proposals.edit.insert_title.#{@proposal.proposal_type.name.downcase}") %>
                  </div>
                  <span class="remove_sol_button">
                    <a href="#" onclick="removeSolution(this,true);return false;" data-solution_id="<%= i %>"><%= t('pages.proposals.edit.remove_solution') %></a>
                  </span>
                </div>
              </h3>
              <div class="pressed"><%= t('pages.proposals.edit.press_to_compress') %></div>
              <div class="sol_content">
                <div class="solutions_column" data-solution_id="<%= i %>">


                  <%= sol.hidden_field :seq %>
                  <%= sol.check_box '_destroy', style: 'display:none' %>
                  <% solution.sections.each_with_index do |section, j| %>
                      <%= sol.fields_for :sections, section do |s| %>
                          <%= s.hidden_field :title %>
                          <%= s.hidden_field :question %>
                          <%= s.hidden_field :seq %>
                          <%= s.check_box '_destroy', style: 'display:none' %>
                          <%= s.fields_for :paragraphs, section.paragraphs.first do |p| %>
                              <div class="section_container" data-section_id="<%= (i+1)*100+j %>">
                                <span class="move_button">
                              <%= image_tag 'move.png' %>
                            </span>
                             <span class="remove_button">
                              <a href="#" onclick="removeSolutionSection(this,true);return false;" data-section_id="<%= j %>" data-solution_id="<%= i %>"><%= t('pages.proposals.edit.remove_section') %></a>
                            </span>

                                <div class="clearboth"></div>
                                <%= s.text_field :title, class: "edit_label" %>
                                <%= p.cktext_area :content_dirty, :rows => 5, :style => "width:98%;height:280px;", ckeditor: {toolbar: 'proposal', language: I18n.locale, customConfig: 'config_lite.js'} %>
                                <%= p.hidden_field :content %>

                                <%= p.hidden_field :seq %>
                              </div>
                          <% end %>
                      <% end %>
                  <% end %>
                </div>
                <div class="new_section">
                  <a href="#" onclick="addSolutionSection(this);return false;" data-solution_id="<%= i %>"><%= t('pages.proposals.edit.add_paragraph_to_solution') %></a>
                </div>
              </div>
            </div>
        <% end %>
    <% end %>


    <div class="new_section">
      <a href="#" onclick="addSolution(this);return false;"><%= t("pages.proposals.edit.add_solution.#{@proposal.proposal_type.name.downcase}") %></a><br/><a style="font-size: 0.8em" href="#" onclick="you_know();return false;"><%= t('pages.proposals.edit.you_know_what_you_do') %></a>
    </div>

    <div id="you_know" title="<%= t('pages.proposals.edit.schulze_title') %>" style="display:none;line-height: 160%">
      <%= t('pages.proposals.edit.more_solutions_explained_html') %>
    </div>

    <p>
      <%= f.hidden_field :integrated_contributes_ids_list %>

      <%= f.submit t('buttons.update'), :class => 'btn blue', :onclick => 'return fillCleanFields();', disable_with: t('updating') %>


    </p>
<% end %>

<div class="suggestion_right editing">
<span id="suggestion_title">
<%= t('pages.proposals.edit.inserted_contributes') %>
</span>

  <div id="loading_contributes" style="margin:auto;text-align:center;">
    <%= image_tag 'ajax-loader.gif' %>
    <br/>
    <b><%= t('pages.proposals.show.loading_contributions') %></b>
  </div>
  <div id="proposalCommentsContainer">

  </div>

  <div id="loading_results" style="display:none;">
    <span><%= t('pages.proposals.show.previos_contributes') %></span>
  </div>
</div>


<% data = "["
   @proposal.tags_list.split(',').each do |l|
     data += "{\"id\":\""+ l + "\",\"name\":\"" + l + "\"},"
   end
   data += "]"
%>
<script type="text/javascript">
    $(function () {
        input = $('#proposal_interest_borders_tkn')
        input.tokenInput("/interest_borders.json", {
            crossDomain: false,
            prePopulate: input.data("pre"),
            hintText: "<%=t('interest_borders.hint')%>",
            noResultsText: "<%=t('interest_borders.no_place_found')%>",
            searchingText: "<%=t('interest_borders.searching')%>",
            preventDuplicates: true
        });


        input = $('#proposal_tags_list')
        if (input != null) {
            input.tokenInput("<%=tags_path(format: :json )%>", {
                theme: "facebook",
                crossDomain: false,
                prePopulate: <%=raw data%>,
                allowFreeTagging: true,
                minChars: 3,
                hintText: "<%=t('digit_tags')%>",
                searchingText: "<%=t('digit_tags')%>",
                preventDuplicates: true,
                allowTabOut: true,
                tokenValue: "name"
            })
        }


        $('#proposal_proposal_category_id').select2({
            minimumResultsForSearch: -1,
            formatResult: formatCategory,
            formatSelection: formatCategory,
            escapeMarkup: function (m) {
                return m;
            }
        });
    });
</script>




<script type="text/javascript">
    $('#menu-left, #centerpanelextended').addClass('editing');
    function geocode_panel() {

    }

    fitRightMenu($('.suggestion_right'));
    $('.suggestion_right')
            .bind('mousewheel DOMMouseScroll', function (e) {
                if (e.originalEvent) e = e.originalEvent;
                var delta = e.wheelDelta || -e.detail;
                this.scrollTop += ( delta < 0 ? 1 : -1 ) * 30;
                e.preventDefault();
                if (((this.scrollTop + parseInt(this.style.height, 10)) > (this.scrollHeight - 100)) && checkActive) {
                    checkActive = false;
                    fetchContributes();
                }
            });

    var currentPage = 0;
    var currentView = 3;
    var contributes = [];
    var checkActive = false;

    function fetchContributes() {
        currentPage++;
        $.ajax({ url: '<%=edit_list_proposal_proposal_comments_url(@proposal) %>',
            data: {page: currentPage,
                view: currentView,
                contributes: contributes,
                all: true
            },
            type: 'get',
            complete: function () {
                $("#loading_contributes").hide();
            }
        });
    }
    $(function () {
        fetchContributes();
        anima();
    });

    var integrated_contributes = [];


    function compressSolution(element) {
        var toggleMinHeight = 100,
                duration = 500,
                easing = 'swing',
                this_ = element,
                compress_ = element.parent(),
                curH = compress_.height();
        if (compress_.is(':animated')) {
            return false;
        }
        else if (compress_.attr('data-compressed') == 'false') {
            compress_.attr('data-compressed', true);
            compress_.attr('data-height', compress_.height());
            $('.sol_content', compress_).hide();
            compress_.animate(
                    {
                        'height': toggleMinHeight
                    }, duration, easing, function () {
                        var pressed_ = $('.pressed', compress_).text('<%=j t('pages.proposals.edit.press_to_expand')%>');
                        pressed_.hide();
                        this_.after(pressed_);
                        pressed_.fadeIn();
                    });

        }
        else {
            compress_.attr('data-compressed', false);

            compress_.animate(
                    {
                        'height': compress_.attr('data-height')
                    }, duration, easing, function () {
                        var pressed_ = $('.pressed', compress_).text('<%=j t('pages.proposals.edit.press_to_compress') %>');
                    });

            $('.sol_content', compress_).show();
        }

    }

    function anima() {
        $('.solution_main h3').each(function () {
            $(this).parent().attr('data-compressed', false);
        })
                .click(function () {
                    compressSolution($(this));
                });
        $('.solution_main h3 input').click(function (event) {
            event.preventDefault();
            return false;
        });

    }

    function integrate_contribute(el, id) {
        var comment_ = $('#comment' + id);
        var inside_ = comment_.find('.proposal_comment');
        if ($(el).is(':checked')) {
            integrated_contributes.push(id);
            comment_.fadeTo(400, 0.3);
            inside_.attr('data-height', inside_.outerHeight());
            inside_.css('overflow', 'hidden');
            inside_.animate({height: '42px'}, 400);
        }
        else {
            integrated_contributes.splice(integrated_contributes.indexOf(id), 1);
            comment_.fadeTo(400, 1);
            inside_.animate({height: inside_.attr('data-height')}, 400, 'swing', function () {
                inside_.css('overflow', 'auto', function () {
                });
            });

        }
        $('#proposal_integrated_contributes_ids_list').val(integrated_contributes);
    }


    function you_know() {
        $('#you_know').dialog({modal: true, width: 600, height: 'auto'});
    }

    function checkScroll() {
        if (nearBottomOfPage() && checkActive) {
            checkActive = false;
            currentPage++;
            $.ajax({ url: '<%=edit_list_proposal_proposal_comments_url(@proposal) %>',
                data: {page: currentPage,
                    view: currentView,
                    contributes: contributes,
                    all: true
                },
                type: 'get'});
        } else {
            setTimeout("checkScroll()", 250);
        }
    }


    var ckedstoogle_ = {};


    function addEditorEvents(editor_) {
        editor_.on('lite:init', function (event) {
            ckedstoogle_[event.editor.name]['first'] = false;
            var lite = event.data.lite;
            ckedstoogle_[event.editor.name]['editor'] = lite;
            lite.toggleShow(ckedstoogle_[event.editor.name]['state']);
            lite.setUserInfo({id: <%=current_user.id%>, name: '<%=j current_user.fullname%>'});
        });
        editor_.on('lite:showHide', function (event) {
            if (!ckedstoogle_[event.editor.name]['first']) {
                ckedstoogle_[event.editor.name]['state'] = event.data.show;
            }
        });
    }

    function addEditor(id) {
        var editor_ = CKEDITOR.replace(id, {"toolbar": "proposal", "language": "<%=I18n.locale%>", "customConfig": 'config_lite.js'});
        ckedstoogle_[id] = {first: true};
        addEditorEvents(editor_);
    }

    function readableName(name) {
        return $('#' + name).parent().find('.edit_label').val();
    }


    $(function () {
        for (name in CKEDITOR.instances) {
            ckedstoogle_[name] = {first: true};
            var editor = CKEDITOR.instances[name];
            addEditorEvents(editor);
        }
    });

    //fills all clean fields with correct data
    function fillCleanFields() {
        var integrated_ = $('#proposal_integrated_contributes_ids_list').val();
        <%if @proposal.contributes.count > 0%>
        if (integrated_ == "") {
            if (!confirm('<%=t('pages.proposals.edit.update_confirm')%>')) {
                return false;
            }
        }
        <%end%>
        try {
            var id;
            for (id in CKEDITOR.instances) {
                var editor = CKEDITOR.instances[id];
                var textarea_ = $('#' + id);
                var lite = ckedstoogle_[id]['editor'];
                var clean = lite._tracker.getCleanContent();
                var name_ = textarea_.attr('name').replace('_dirty', '').replace(/\[/g, '\\[').replace(/\]/g, '\\]');
                var target = $('[name=' + name_ + ']');
                target.val(clean);
            }
        } catch (err) {
            console.error(err);
            console.error('error in parsing ' + name);
            return false;
        }

        $('.update2').attr('disabled', 'disabled');
        safe_exit = true;
        return true;
    }

    var numSolution = <%=@proposal.solutions.count%>;       //this is used for ids
    var fakeNumSolution = <%=@proposal.solutions.count%>;   //this is used to show user the number and for sequences
    var numSections = <%=@proposal.sections.count%>;

    //register the number of current sections for each solution
    var numSolutionSections = {};

    <%@proposal.solutions.each_with_index do |sol,i|%>
    numSolutionSections[<%=i%>] = <%=sol.sections.count%>;
    <%end%>

    function addSection(el) {
        var sectionname = 'proposal[sections_attributes][' + numSections + ']';
        var sectionid = sectionname.replace(/\]\[/g, '_').replace(/\[/, '_').replace(/\]/, '');
        var paragraphname = sectionname + '[paragraphs_attributes][0]';
        var paragraph_ = $('<div class="section_container" style="display:none;" data-section_id="' + numSections + '"></div>');
        var paragraphid = paragraphname.replace(/\]\[/g, '_').replace(/\[/, '_').replace(/\]/, '');
        paragraph_.append('<span class="move_button"><img alt="Move" src="/assets/move.png"></span>');
        paragraph_.append('<span class="remove_button"><a href="#" onclick="removeSection(this,' + numSections + ',false);return false;"><%=j t('pages.proposals.edit.remove_section') %></a></span>');
        paragraph_.append('<div class="clearboth"></div>');
        paragraph_.append('<input type="text" class="edit_label" value="<%=j t('pages.proposals.edit.paragraph')%> ' + (numSections + 1) + '" name=\'' + sectionname + '[title]\'></input>');
        var textarea_ = $('<textarea cols=\'40\' rows=\'5\' style=\'width:98%; height: 280px;\' id=\'' + paragraphid + '_content_dirty\' name=\'' + paragraphname + '[content_dirty]\' ></textarea>');
        textarea_.val('<p></p>');
        paragraph_.append(textarea_);
        paragraph_.append('<input type=\'hidden\' name=\'' + paragraphname + '[content]\'></input>');
        var seq_ = $('<input type=\'hidden\' name=\'' + sectionname + '][seq]\' id=\'' + sectionid + '_seq\'></input>');
        seq_.val(numSections);
        paragraph_.append(seq_);
        paragraph_.append('<input type=\'hidden\' value=\'1\' name=\'' + paragraphname + '[seq]\'></input>');
        $('.sections_column').append(paragraph_);
        paragraph_.fadeIn();

        addEditor(textarea_.attr('id'));


        //navigator update
        var nav_ = $('.navigator .sec_nav').last();

        var sec_nav = $('<li data-section_id="' + numSections + '" class="sec_nav"><a href="#" onclick="return scrollToSection(this);" class="sec_title"><%=j t('pages.proposals.edit.paragraph')%> ' + (numSections + 1) + '</a></li>');
        nav_.after(sec_nav);

        listen_title_change();

        numSections += 1;
    }


    function addSolutionSection(el) {
        var solutionid = $(el).attr('data-solution_id');
        var sectionname = 'proposal[solutions_attributes][' + solutionid + '][sections_attributes][' + numSolutionSections[solutionid] + ']';
        var sectionid = sectionname.replace(/\]\[/g, '_').replace(/\[/, '_').replace(/\]/, '');
        var paragraphname = sectionname + '[paragraphs_attributes][0]';
        var section_num = ((parseInt(solutionid) + 1) * 100) + numSolutionSections[solutionid];
        var paragraph_ = $('<div class="section_container" style="display:none;" data-section_id="' + section_num + '"></div>');
        var paragraphid = paragraphname.replace(/\]\[/g, '_').replace(/\[/, '_').replace(/\]/, '');

        paragraph_.append('<span class="move_button"><img alt="Move" src="/assets/move.png"></span>');
        paragraph_.append('<span class="remove_button"><a href="#" onclick="removeSolutionSection(this,false);return false;"><%=j t('pages.proposals.edit.remove_section') %></a></span>');
        paragraph_.append('<div class="clearboth"></div>');
        paragraph_.append('<input type="text" class="edit_label" value="<%=j t('pages.proposals.edit.paragraph')%> ' + (numSolutionSections[solutionid] + 1) + '" name=\'' + sectionname + '[title]\'></input>');
        var textarea_ = $('<textarea cols=\'40\' rows=\'5\' style=\'width:98%; height: 280px;\' id=\'' + paragraphid + '_content_dirty\' name=\'' + paragraphname + '[content_dirty]\' ></textarea>');
        textarea_.val('<p></p>');
        paragraph_.append(textarea_);
        paragraph_.append('<input type=\'hidden\' name=\'' + paragraphname + '[content]\'></input>');
        var seq_ = $('<input type=\'hidden\' name=\'' + sectionname + '][seq]\' id=\'' + sectionid + '_seq\'></input>');
        seq_.val(numSolutionSections[solutionid]);
        paragraph_.append(seq_);
        paragraph_.append('<input type=\'hidden\' value=\'1\' name=\'' + paragraphname + '[seq]\'></input>');
        $('.solutions_column[data-solution_id=' + solutionid + ']').append(paragraph_);
        $('.solution_main[data-solution_id=' + solutionid + ']').css('height', '');
        paragraph_.fadeIn();

        addEditor(textarea_.attr('id'));


        //navigator update
        var nav_ = $('.navigator li[data-solution_id=' + solutionid + ']');

        var sec_nav = $('<li data-section_id="' + section_num + '"><a href="#" onclick="return scrollToSection(this);" class="sec_title"><%=j t('pages.proposals.edit.paragraph')%> ' + (numSolutionSections[solutionid] + 1) + '</a></li>');
        nav_.find('.sub_navigator').append(sec_nav);

        listen_title_change();

        numSolutionSections[solutionid] += 1;

    }


    function addSolution(el) {
        var paragraph_ = $("<%=j render "proposal_types/solution"%>");
        try {
        $(el).parent().before(paragraph_);
        } catch (e) {
            console.error(e);
            console.error('errors occured adding a new solution');
        }
        paragraph_.fadeIn();
        numSolution++;
        fakeNumSolution++;
        paragraph_.find(".title_placeholder .num").html(fakeNumSolution);

        paragraph_.find("[name^='proposals\[solutions_attributes\]\[0\]\[seq\]']").val(fakeNumSolution);
        paragraph_.find(".add_section").attr('data-solution_id', numSolution);
        paragraph_.find(".solutions_column").attr('data-solution_id', numSolution);
        paragraph_.attr('data-solution_id', numSolution);
        paragraph_.find("textarea[name^='proposals\[solutions_attributes\]\[0\]']").each(function () {
            var id_ = $(this).attr('id');
            $(this).attr('id', id_.replace('proposals_solutions_attributes_0', 'proposals_solutions_attributes_' + numSolution));
        });
        paragraph_.find("[name^='proposals\[solutions_attributes\]\[0\]']").each(function () {
            var name_ = $(this).attr('name');
            $(this).attr('name', name_.replace('proposals[solutions_attributes][0]', 'proposal[solutions_attributes][' + numSolution + ']'));
        });

        paragraph_.find('textarea.tinymce').each(function () {
            addEditor($(this).attr('id'));
        });

        paragraph_.find('.remove_section').attr('data-solution_id', numSolution);

        numSolutionSections[numSolution] = paragraph_.find('.section_container').length + 1;

        make_solution_sortable($(".solutions_column", paragraph_));

        //navigator update
        $('.navigator li[data-solution_id=new]').attr('data-solution_id', numSolution);
        var nav_ = $('.navigator li[data-solution_id=' + numSolution + ']');
        nav_.find('span.sol_title').html(""); //TODO title in navigator
        nav_.find('.sub_navigator li').each(function () {
            var sec_id = parseInt($(this).attr('data-section_id'));
            paragraph_.find('.section_container[data-section_id=' + sec_id + ']').attr('data-section_id', (numSolution + 1) * 100 + sec_id);
            $(this).attr('data-section_id', (numSolution + 1) * 100 + sec_id);
        });


        listen_title_change();
    }

    function removeSolutionSection(el, hide) {
        if (confirm('<%=j t('pages.proposals.edit.confirm_paragraph_deletion')%>')) {
            var section_ = $(el).parent().parent();
            var solution_id = section_.parent().attr('data-solution_id');
            var section_id = $(el).attr('data-section_id');
            if (hide) {
                $('input[name="proposal\[solutions_attributes\]\[' + solution_id + '\]\[sections_attributes\]\[' + section_id + '\]\[_destroy\]"]').val(1);
                section_.fadeOut();
            }
            else {
                section_.fadeOut(function () {
                    section_.remove();
                });
            }

            //navigator update
            //var solution_id = $(this).attr('data-solution_id');
            //var nav_ = $('li[data-solution_id='+solution_id+'] .sub_navigator');
            //nav_.find('li[data-section_id='+section_id+']').remove();
        }
    }

    function removeSolution(el, hide) {
        if (confirm('<%=j t('pages.proposals.edit.confirm_solution_deletion')%>')) {
            var section_ = $(el).closest('.solution_main');
            var solution_id = $(el).attr('data-solution_id');
            if (hide) {
                $('input[name="proposal\[solutions_attributes\]\[' + solution_id + '\]\[_destroy\]"]').val(1);
                section_.fadeOut();
            }
            else {
                section_.fadeOut(function () {
                    section_.remove();
                    //CKEDITOR.remove(section_.find('textarea').attr('id'));
                });
            }
            section_.nextUntil(null,'.solution_main').each(function() {
                var sol_id = $(this).attr('data-solution_id');
                var id = $(this).find('textarea').attr('id');
                var seqel_ = $("[name^='proposal\[solutions_attributes\]\["+sol_id+"\]\[seq\]']");
                var seq_ = parseInt(seqel_.val());
                seqel_.val(seq_-1);
                $(this).find(".title_placeholder .num").html(seq_-1);
            });
            fakeNumSolution--;
        }
    }

    function removeSection(el, id, hide) {
        if (confirm('<%=j t('pages.proposals.edit.confirm_paragraph_deletion')%>')) {
            var section_ = $(el).parent().parent();
            if (hide) {
                $('input[name="proposal\[sections_attributes\]\[' + id + '\]\[_destroy\]"]').val(1);
                section_.fadeOut();
            }
            else {
                section_.fadeOut(function () {
                    section_.remove();
                });
            }
        }
    }


    var ckeConfigs = {};
    $(".sections_column").sortable({
        connectWith: ".column",
        cursor: "move",
        axis: "y",
        handle: '.move_button',
        start: function (e, ui) {
            var textareaId = ui.item.find('textarea').attr('id');
            if (typeof textareaId != 'undefined') {
                var editorInstance = CKEDITOR.instances[textareaId];
                editorInstance.destroy();
                CKEDITOR.remove(textareaId);
            }
        },
        stop: function (e, ui) {
            var textareaId = ui.item.find('textarea').attr('id');
            if (typeof textareaId != 'undefined') {
                ckedstoogle_[textareaId]['first'] = true;
                addEditor(textareaId);
            }
            var i = 0;

            //navigator update

            var nav_ = $('.navigator');
            nav_.find('li.sec_nav').addClass('detach');

            $(this).find('div.section_container').each(function (el) {
                var sec_id = $(this).attr('data-section_id');
                var id = $(this).find('textarea').attr('id');
                var seq_id = id.replace(/paragraphs_attributes.*/, 'seq');
                $('#' + seq_id).val(i++);

                //navigator update
                var list_ = nav_.find('li.sec_nav[data-section_id=' + sec_id + ']').detach();
                list_.removeClass('detach');
                var last_ = nav_.find('li.sec_nav').not('.detach').last();
                if (last_.length > 0) {
                    last_.after(list_);
                }
                else {
                    nav_.prepend(list_);
                }
            });
        }
    });


    function make_solution_sortable(jquery_obj) {
        jquery_obj.sortable({
            connectWith: ".column",
            cursor: "move",
            axis: "y",
            handle: '.move_button',
            start: function (e, ui) {
                var textareaId = ui.item.find('textarea').attr('id');
                if (typeof textareaId != 'undefined') {
                    var editorInstance = CKEDITOR.instances[textareaId];
                    editorInstance.destroy();
                    CKEDITOR.remove(textareaId);
                }
            },
            stop: function (e, ui) {
                var textareaId = ui.item.find('textarea').attr('id');
                if (typeof textareaId != 'undefined') {
                    ckedstoogle_[textareaId]['first'] = true;
                    addEditor(textareaId);
                }
                var i = 0;

                //navigator update
                var sol_id = $(this).attr('data-solution_id');
                var nav_ = $('li[data-solution_id=' + sol_id + '] .sub_navigator');
                nav_.find('li').addClass('detach');

                $(this).find('div.section_container').each(function (el) {
                    var sec_id = $(this).attr('data-section_id');

                    var area_id = $(this).find('textarea').attr('id');
                    var seq_id = area_id.replace(/paragraphs_attributes.*/, 'seq');
                    $('#' + seq_id).val(i++);

                    //navigator update
                    var list_ = nav_.find('li[data-section_id=' + sec_id + ']').detach();
                    list_.removeClass('detach');
                    var last_ = nav_.find('li').not('.detach').last();
                    if (last_.length > 0) {
                        last_.after(list_);
                    }
                    else {
                        nav_.prepend(list_);
                    }


                });
            }
        });

    }

    function listen_title_change() {
        $('.solution_main h3 .tit1 .tit2 input').on('keyup', function () {
            var id_ = $(this).closest('.solution_main').attr('data-solution_id');
            $('.navigator li[data-solution_id=' + id_ + '] span.sol_title').html($(this).val());
        })

        $('input.edit_label').on('keyup', function () {
            var id_ = $(this).closest('.section_container').attr('data-section_id');
            $('.navigator li[data-section_id=' + id_ + '] a.sec_title').text($(this).val());
        })
    }

    make_solution_sortable($(".solutions_column"));
    listen_title_change();


</script>








<% content_for :left_panel do %>
    <div class="edit_proposal_panel">
      <div class="mybox">
        <%= link_to t('buttons.update'), '#', onclick: "return updateProposal();", class: 'update2 btn blue' %>
        <%= link_to t('pages.proposals.edit.compress_solutions'), '#', onclick: 'return compressSolutions();', data: {other: t('pages.proposals.edit.expand_solutions')}, class: 'compress btn' %>
        <%= link_to t('pages.proposals.edit.hide_contributes'), '#', onclick: 'return hideContributes();', data: {other: t('pages.proposals.edit.show_contributes')}, class: 'contributes btn' %>
        <%= link_to t('buttons.cancel'), @proposal.private ? group_proposal_url(@proposal.presentation_groups.first, @proposal) : proposal_url(@proposal, subdomain: false), class: 'btn' %>
      </div>
      <div class="mybox">
        <h4><%= t('pages.proposals.edit.navigator') %></h4>
        <ul class="navigator">
          <% @proposal.sections.each_with_index do |section, i| %>
              <li class="sec_nav" data-section_id="<%= i %>"><%= link_to section.title, '#', onclick: "return scrollToSection(this);", class: 'sec_title' %></li>
          <% end %>
          <% @proposal.solutions.each_with_index do |solution, i| %>
              <li data-solution_id="<%= i %>"><span class="sol_title"><%= solution.title %></span>
                <ul class="sub_navigator">
                  <% solution.sections.each_with_index do |section, j| %>
                      <li data-section_id="<%= (i+1)*100+j %>"><%= link_to section.title, '#', onclick: "return scrollToSection(this);", class: 'sec_title' %></li>
                  <% end %>
                </ul>
              </li>
          <% end %>
        </ul>
      </div>
    </div>


    <script type="text/javascript">
        var left_panel_ = $('.edit_proposal_panel');
        if (left_panel_.height() < ($(window).height() - 100)) {
            left_panel_.addClass('sticky');
        }


        function updateProposal() {
            if ($('.update2').attr('disabled') != 'disabled') {
                $('form input:submit').click();
            }
            return false;
        }

        function scrollToSection(el) {
            scrollToElement($(".section_container[data-section_id=" + $(el).parent().attr('data-section_id') + "]"));
            return false;
        }

        function hideContributes() {
            var right_ = $('.suggestion_right');
            if (right_.hasClass('contributes_shown')) {
                right_.removeClass('contributes_shown');
                right_.hide();
                $('#centerpanelextended').removeClass('contributes_shown');
                $('#menu-left').removeClass('contributes_shown');
            }
            else {
                right_.addClass('contributes_shown');
                right_.show();
                $('#centerpanelextended').addClass('contributes_shown');
                $('#menu-left').addClass('contributes_shown');
            }
            var contributesButton = $('.contributes');
            switchText(contributesButton);
            return false;
        }

        function compressSolutions() {
            $('.solution_main h3').each(function () {
                compressSolution($(this));
            });
            var compressButton = $('.compress');
            switchText(compressButton);

            return false;
        }


        var safe_exit = false;

        function check_before_exit() {
            if (safe_exit) {
                return null;
            }
            else {
                return "Tutte le modifiche alla proposta andranno perse."
            }
        };

        window.onbeforeunload = check_before_exit;

    </script>
<% end %>